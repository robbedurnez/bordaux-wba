// <auto-generated />
using System;
using BordauxWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BordauxWebApp.Migrations.Bordaux
{
    [DbContext(typeof(BordauxContext))]
    [Migration("20200105203736_Move_Entities")]
    partial class Move_Entities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BordauxLib.Entities.Act", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Acts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6f92afb-4034-4271-94a3-4535da5681f8"),
                            Name = "Bordaux"
                        },
                        new
                        {
                            Id = new Guid("a06bad0d-a155-4d5e-b5b4-71552d75e100"),
                            Name = "Justified"
                        },
                        new
                        {
                            Id = new Guid("2f620308-eba3-4113-bb7a-c6cd9a790a27"),
                            Name = "DwightLight"
                        });
                });

            modelBuilder.Entity("BordauxLib.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine");

                    b.Property<string>("City");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("EndDate");

                    b.Property<TimeSpan>("EndTime");

                    b.Property<string>("Name");

                    b.Property<int>("PostalCode");

                    b.Property<string>("PromotorId");

                    b.Property<DateTime>("StartDate");

                    b.Property<TimeSpan>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("PromotorId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6453958f-32b3-488f-8a28-370224a41717"),
                            AddressLine = "Stationsstraat 19",
                            City = "Torhout",
                            DateCreated = new DateTime(2020, 1, 5, 21, 37, 35, 765, DateTimeKind.Local).AddTicks(308),
                            EndDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            Name = "2Fish invites Bordaux",
                            PostalCode = 8840,
                            PromotorId = "a11f645a-a580-47c4-87fb-6a57b8e16f68",
                            StartDate = new DateTime(2019, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("cf4c2d73-093d-4cc3-bfcc-6cdd3821734c"),
                            AddressLine = "Kuipersstraat 13",
                            City = "Brugge",
                            DateCreated = new DateTime(2020, 1, 5, 21, 37, 35, 767, DateTimeKind.Local).AddTicks(359),
                            EndDate = new DateTime(2019, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 5, 0, 0, 0),
                            Name = "Club NEO invites Bordaux",
                            PostalCode = 8840,
                            PromotorId = "a11f645a-a580-47c4-87fb-6a57b8e16f68",
                            StartDate = new DateTime(2019, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new TimeSpan(0, 23, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("c2b81227-d487-40f5-ba55-e651e73fa316"),
                            AddressLine = "Stationsstraat 10",
                            City = "Torhout",
                            DateCreated = new DateTime(2020, 1, 5, 21, 37, 35, 767, DateTimeKind.Local).AddTicks(393),
                            EndDate = new DateTime(2019, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            Name = "2Fish invites Bordaux pt 2",
                            PostalCode = 8840,
                            PromotorId = "a11f645a-a580-47c4-87fb-6a57b8e16f68",
                            StartDate = new DateTime(2019, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("BordauxLib.Entities.EventAct", b =>
                {
                    b.Property<Guid>("EventId");

                    b.Property<Guid>("ActId");

                    b.HasKey("EventId", "ActId");

                    b.HasIndex("ActId");

                    b.ToTable("EventActs");
                });

            modelBuilder.Entity("BordauxLib.Entities.Promotor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.HasKey("Id");

                    b.ToTable("Promotors");

                    b.HasData(
                        new
                        {
                            Id = "a11f645a-a580-47c4-87fb-6a57b8e16f68",
                            Email = "robbe.durnez@student.howest.be"
                        });
                });

            modelBuilder.Entity("BordauxLib.Entities.Event", b =>
                {
                    b.HasOne("BordauxLib.Entities.Promotor", "Promotor")
                        .WithMany("Events")
                        .HasForeignKey("PromotorId");
                });

            modelBuilder.Entity("BordauxLib.Entities.EventAct", b =>
                {
                    b.HasOne("BordauxLib.Entities.Act", "Act")
                        .WithMany("Events")
                        .HasForeignKey("ActId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BordauxLib.Entities.Event", "Event")
                        .WithMany("Acts")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
